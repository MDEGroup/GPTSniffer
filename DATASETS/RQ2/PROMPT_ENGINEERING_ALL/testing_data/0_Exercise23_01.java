import java.util.Comparator;public class GenericBubbleSort {    public static void main(String[] args) {        Integer[] intArray = {5, 3, 8, 1, 7, 2, 6, 4};        Double[] doubleArray = {3.5, 1.2, 6.7, 2.1, 8.0, 4.4, 7.3, 5.6};        System.out.print("Original Integer Array: ");        printArray(intArray);        bubbleSort(intArray);        System.out.print("Sorted Integer Array: ");        printArray(intArray);        System.out.print("Original Double Array: ");        printArray(doubleArray);        bubbleSort(doubleArray, Comparator.reverseOrder());        System.out.print("Sorted Double Array in Reverse Order: ");        printArray(doubleArray);    }    /**     * Generic method for bubble sorting using Comparable interface     *     * @param list The array to be sorted     * @param <E>  The type of elements in the array     */    public static <E extends Comparable<E>> void bubbleSort(E[] list) {        boolean swapped = true;        while (swapped) {            swapped = false;            for (int i = 0; i < list.length - 1; i++) {                if (list[i].compareTo(list[i + 1]) > 0) {                    // Swap elements if they are in the wrong order                    E temp = list[i];                    list[i] = list[i + 1];                    list[i + 1] = temp;                    swapped = true;                }            }        }    }    /**     * Generic method for bubble sorting using Comparator interface     *     * @param list       The array to be sorted     * @param comparator The comparator to define sorting order     * @param <E>        The type of elements in the array     */    public static <E> void bubbleSort(E[] list, Comparator<? super E> comparator) {        boolean swapped = true;        while (swapped) {            swapped = false;            for (int i = 0; i < list.length - 1; i++) {                if (comparator.compare(list[i], list[i + 1]) > 0) {                    // Swap elements if they are in the wrong order                    E temp = list[i];                    list[i] = list[i + 1];                    list[i + 1] = temp;                    swapped = true;                }            }        }    }    /**     * Print the elements of a generic array     *     * @param array The array to be printed     * @param <E>   The type of elements in the array     */    private static <E> void printArray(E[] array) {        for (E value : array) {            System.out.print(value + " ");        }        System.out.println();    }}